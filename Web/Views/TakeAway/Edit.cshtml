@model Web.Models.TakeAway

@{
    ViewData["Title"] = "Edit";
}

<div class="card">
    <div class="card-header">
        <b>Editar pedido</b>
    </div>
    <div class="card-body">
        <form asp-action="Edit" id="form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" id="numberOfTarifas" />
            <span class="text-danger">@Html.ValidationMessageFor(m => m.ValidationError)</span>

            <div class="form-row">
                <h3>Productos del pedido</h3>
                <div id="ProductosContainer" class="form-group">
                    @Html.EditorFor(model => model.Productos)
                </div>
            </div>
            <div class="form-row mt-2">
                <div class="form-group col-md-6">
                    <input class="btn btn-success" type="button" id="btnAdd" value="+ Agregar productos" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group mt-2 col-md-6">
                    <label asp-for="MetodoPagoRefId" class="control-label">Método de pago</label>
                    <select asp-for="MetodoPagoRefId" class="form-control" asp-items="ViewBag.MetodoPagoRefId"></select>
                    <span asp-validation-for="MetodoPagoRefId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group mt-2 col-md-6">
                    <label asp-for="PromocionRefId" class="control-label">Promoción</label>
                    <select asp-for="PromocionRefId" class="form-control" asp-items="ViewBag.PromocionRefId">
                        <option value="">Seleccione una promoción</option>
                    </select>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group mt-2 col-md-6">
                    <label asp-for="NombreCliente" class="control-label">Cliente</label>
                    <input asp-for="NombreCliente" class="form-control" />
                    <span asp-validation-for="NombreCliente" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group mt-2 col-md-6">
                <label asp-for="HorarioEntrega" class="control-label"></label>
                <input asp-for="HorarioEntrega" class="form-control" />
                <span asp-validation-for="HorarioEntrega" class="text-danger"></span>
            </div>

            <div class="form-group col-md-6 mt-2 d-none">
                <input asp-for="PrecioPedido" id="PrecioPedido" class="form-control" />
            </div>

            <br>
            <div class="d-flex justify-content-center">
                &nbsp;<input type="submit" value="Guardar cambios" id="submit" class="btn btn-primary" />&nbsp;
                <a class="btn btn-info ml-2 btn-volver" asp-action="Index">Volver a la tabla</a>&nbsp;
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">

        var totalPrecios = 0;

        $("#btnAdd").on('click', function () {
            var listaPrecioId = $("#ListaPrecioRefId").val();

            $.ajax({
                async: true,
                type: "GET",
                url: '/TakeAway/GetPrecioProducto',
                data: { listaPrecioId: listaPrecioId },
                success: function (precioProducto) {

                }
            });

            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/TakeAway/AddProducto',
                success: function (partialView) {
                    $('#ProductosContainer').html(partialView);
                }
            });
        });

        $("#submit").on('click', function () {
            try {

                totalPrecios = 0;

                var opcionesSeleccionadas = $("#ProductosContainer option:selected");

                opcionesSeleccionadas.each(function () {
                    var precioTexto = $(this).text().split('-')[1].trim();
                    var precioFloat = parseFloat(precioTexto);
                    if (!isNaN(precioFloat)) {
                        totalPrecios += precioFloat;
                    }
                });

                $("#PrecioPedido").val(totalPrecios);

                return true;
            } catch (error) {
                console.error("Error al calcular el precio total del pedido: " + error);

                return false;
            }
        });
    </script>
}
