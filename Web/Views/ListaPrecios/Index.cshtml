@model IEnumerable<Web.Models.ListaPrecio>

@{
    ViewData["Title"] = "Index";
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
}

<h1>Lista de precios</h1>

<p>
    <div class="row">
        <div class="col-sm">
            <a asp-action="Create" class="btn btn-primary">Nuevo producto</a>
            &nbsp;&nbsp;
            <a asp-action="ImportarListaPrecios" class="btn btn-success">Importar lista de precios</a>
        </div>
    </div>
</p>
<form method="get" asp-action="Index">
    <div class="row mb-3">
            <div class="col">
                <input type="text" class="form-control col-sm" name="search" id="search" placeholder="Ingrese el nombre del producto" />
            </div>
            <div class="col">
                <input type="submit" value="Buscar" name="search" id="search" class="btn btn-warning" />

                <input asp-action="Index" type="submit" value="Limpiar búsqueda" id="submit" class="btn btn-secondary" />
            </div>
    </div>
</form>
@if (Model.Count() == 0)
{
    <p class="text-danger">No se encontraron productos con ese nombre.</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Producto)
            </th>
            <th>
                Precio 
                <a class="text-black" asp-action="Index" asp-route-sortOrder="@ViewData["PrecioSortParm"]"><i class="bi bi-arrow-down-up"></i></a>
            </th>
            <th>
                Fecha de registro
            </th>
            <th></th>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Producto)
            </td>
            <td>
                $ @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaRegistro)
            </td>
                <td>
                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">
                            <i class="bi bi-info-circle"></i>
                        </a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id" >
                            <i class="bi bi-trash"></i>
                        </a>
                    </div>
                </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function mostrarDatos() {
            const input = document.getElementById("inputExcel")

            const formData = new FormData()

            formData.append("ArchivoExcel", input.files[0])

            fetch("/ListaPrecios/MostrarDatos",
                {
                    method: "POST",
                    body: formData
                })
                .then((response) => { return response.json() })
                .then((dataJson) => {
                    dataJson.forEach((item) => {
                        $("#tbData tbody").append(
                            $("<tr>").append(
                                $("<td>").text(item.Producto),
                                $("<td>").text(item.Precio)
                            )
                        )
                    })
                })
        }

        function enviarDatos() {
            const input = document.getElementById("inputExcel")

            const formData = new FormData()

            formData.append("ArchivoExcel", input.files[0])

            fetch("ListaPrecios/EnviarDatos", {
                method: "POST",
                body: formData
            })
                .then((response) => { return response.json() })
                .then((dataJson) => {
                    alert(dataJson.mensaje);
                })
        }
    </script>
}